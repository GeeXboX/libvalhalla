
 * Valhalla
     -> Implement a system to support an "on-demand" scan. The goal is
        to retrieve in priority the metadata for a specific file.
     -> Improve the log system to send the messages in a callback
        instead of the stderr (if the callback is defined).
     -> Add callbacks for events (to follow each steps: parsing, grabbing,
        downloading, ...).

 * Database
     -> Add a new SQLite table to store some informations related to the
        library and to the version of the db file.
     -> Add support for file properties (codec, length, bitrate, etc, ...).
     -> Update/delete metadata that were inserted in the DB by a previous
        grabbing when a file is updated.
        When files are downloaded and the reference on this file is no longer
        available in the DB, the file must be removed (covers, etc, ...).
     -> Save in the database the state of all interrupted files in order
        to avoid the calling of all grabbers. The list for the downloader
        must be saved too. It will allow to save a lot of time for the next
        scan.

 * Scanner
     -> Implement a system to add filters (to ignore some directories)
        for a path.
     -> Rewrite a bit the scanner in order to support several scanners
        in parallel (for the same valhalla object). It will be useful
        when some paths are not on the same device because it can
        increase a lot the speed.
        It is already possible to do that but it needs to create a
        valhalla object for each path.

 * Parser
     -> Retrieve all properties (codec, length, bitrate, etc, ...).

 * Grabber
     -> Import more grabbers from Enna.
